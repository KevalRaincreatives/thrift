///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class NewShipmentModelMethodsLinksDescribes {
/*
{
  "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones/"
}
*/

  String? href;

  NewShipmentModelMethodsLinksDescribes({
    this.href,
  });
  NewShipmentModelMethodsLinksDescribes.fromJson(Map<String, dynamic> json) {
    href = json['href']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['href'] = href;
    return data;
  }
}

class NewShipmentModelMethodsLinksCollection {
/*
{
  "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods"
}
*/

  String? href;

  NewShipmentModelMethodsLinksCollection({
    this.href,
  });
  NewShipmentModelMethodsLinksCollection.fromJson(Map<String, dynamic> json) {
    href = json['href']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['href'] = href;
    return data;
  }
}

class NewShipmentModelMethodsLinksSelf {
/*
{
  "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods/1"
}
*/

  String? href;

  NewShipmentModelMethodsLinksSelf({
    this.href,
  });
  NewShipmentModelMethodsLinksSelf.fromJson(Map<String, dynamic> json) {
    href = json['href']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['href'] = href;
    return data;
  }
}

class NewShipmentModelMethodsLinks {
/*
{
  "self": [
    {
      "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods/1"
    }
  ],
  "collection": [
    {
      "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods"
    }
  ],
  "describes": [
    {
      "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones/"
    }
  ]
}
*/

  List<NewShipmentModelMethodsLinksSelf?>? self;
  List<NewShipmentModelMethodsLinksCollection?>? collection;
  List<NewShipmentModelMethodsLinksDescribes?>? describes;

  NewShipmentModelMethodsLinks({
    this.self,
    this.collection,
    this.describes,
  });
  NewShipmentModelMethodsLinks.fromJson(Map<String, dynamic> json) {
    if (json['self'] != null) {
      final v = json['self'];
      final arr0 = <NewShipmentModelMethodsLinksSelf>[];
      v.forEach((v) {
        arr0.add(NewShipmentModelMethodsLinksSelf.fromJson(v));
      });
      self = arr0;
    }
    if (json['collection'] != null) {
      final v = json['collection'];
      final arr0 = <NewShipmentModelMethodsLinksCollection>[];
      v.forEach((v) {
        arr0.add(NewShipmentModelMethodsLinksCollection.fromJson(v));
      });
      collection = arr0;
    }
    if (json['describes'] != null) {
      final v = json['describes'];
      final arr0 = <NewShipmentModelMethodsLinksDescribes>[];
      v.forEach((v) {
        arr0.add(NewShipmentModelMethodsLinksDescribes.fromJson(v));
      });
      describes = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (self != null) {
      final v = self;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['self'] = arr0;
    }
    if (collection != null) {
      final v = collection;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['collection'] = arr0;
    }
    if (describes != null) {
      final v = describes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['describes'] = arr0;
    }
    return data;
  }
}

class NewShipmentModelMethodsSettingsCost {
/*
{
  "id": "cost",
  "label": "Cost",
  "description": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
  "type": "text",
  "value": "3",
  "default": "",
  "tip": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
  "placeholder": ""
}
*/

  String? id;
  String? label;
  String? description;
  String? type;
  String? value;
  String? theDefault;
  String? tip;
  String? placeholder;

  NewShipmentModelMethodsSettingsCost({
    this.id,
    this.label,
    this.description,
    this.type,
    this.value,
    this.theDefault,
    this.tip,
    this.placeholder,
  });
  NewShipmentModelMethodsSettingsCost.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    label = json['label']?.toString();
    description = json['description']?.toString();
    type = json['type']?.toString();
    value = json['value']?.toString();
    theDefault = json['default']?.toString();
    tip = json['tip']?.toString();
    placeholder = json['placeholder']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['label'] = label;
    data['description'] = description;
    data['type'] = type;
    data['value'] = value;
    data['default'] = theDefault;
    data['tip'] = tip;
    data['placeholder'] = placeholder;
    return data;
  }
}

class NewShipmentModelMethodsSettingsTaxStatusOptions {
/*
{
  "taxable": "Taxable",
  "none": "None"
}
*/

  String? taxable;
  String? none;

  NewShipmentModelMethodsSettingsTaxStatusOptions({
    this.taxable,
    this.none,
  });
  NewShipmentModelMethodsSettingsTaxStatusOptions.fromJson(Map<String, dynamic> json) {
    taxable = json['taxable']?.toString();
    none = json['none']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['taxable'] = taxable;
    data['none'] = none;
    return data;
  }
}

class NewShipmentModelMethodsSettingsTaxStatus {
/*
{
  "id": "tax_status",
  "label": "Tax status",
  "description": "",
  "type": "select",
  "value": "taxable",
  "default": "taxable",
  "tip": "",
  "placeholder": "",
  "options": {
    "taxable": "Taxable",
    "none": "None"
  }
}
*/

  String? id;
  String? label;
  String? description;
  String? type;
  String? value;
  String? theDefault;
  String? tip;
  String? placeholder;
  NewShipmentModelMethodsSettingsTaxStatusOptions? options;

  NewShipmentModelMethodsSettingsTaxStatus({
    this.id,
    this.label,
    this.description,
    this.type,
    this.value,
    this.theDefault,
    this.tip,
    this.placeholder,
    this.options,
  });
  NewShipmentModelMethodsSettingsTaxStatus.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    label = json['label']?.toString();
    description = json['description']?.toString();
    type = json['type']?.toString();
    value = json['value']?.toString();
    theDefault = json['default']?.toString();
    tip = json['tip']?.toString();
    placeholder = json['placeholder']?.toString();
    options = (json['options'] != null) ? NewShipmentModelMethodsSettingsTaxStatusOptions.fromJson(json['options']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['label'] = label;
    data['description'] = description;
    data['type'] = type;
    data['value'] = value;
    data['default'] = theDefault;
    data['tip'] = tip;
    data['placeholder'] = placeholder;
    if (options != null) {
      data['options'] = options!.toJson();
    }
    return data;
  }
}

class NewShipmentModelMethodsSettingsTitle {
/*
{
  "id": "title",
  "label": "Method title",
  "description": "This controls the title which the user sees during checkout.",
  "type": "text",
  "value": "Flat rate 1",
  "default": "Flat rate",
  "tip": "This controls the title which the user sees during checkout.",
  "placeholder": ""
}
*/

  String? id;
  String? label;
  String? description;
  String? type;
  String? value;
  String? theDefault;
  String? tip;
  String? placeholder;

  NewShipmentModelMethodsSettingsTitle({
    this.id,
    this.label,
    this.description,
    this.type,
    this.value,
    this.theDefault,
    this.tip,
    this.placeholder,
  });
  NewShipmentModelMethodsSettingsTitle.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    label = json['label']?.toString();
    description = json['description']?.toString();
    type = json['type']?.toString();
    value = json['value']?.toString();
    theDefault = json['default']?.toString();
    tip = json['tip']?.toString();
    placeholder = json['placeholder']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['label'] = label;
    data['description'] = description;
    data['type'] = type;
    data['value'] = value;
    data['default'] = theDefault;
    data['tip'] = tip;
    data['placeholder'] = placeholder;
    return data;
  }
}

class NewShipmentModelMethodsSettings {
/*
{
  "title": {
    "id": "title",
    "label": "Method title",
    "description": "This controls the title which the user sees during checkout.",
    "type": "text",
    "value": "Flat rate 1",
    "default": "Flat rate",
    "tip": "This controls the title which the user sees during checkout.",
    "placeholder": ""
  },
  "tax_status": {
    "id": "tax_status",
    "label": "Tax status",
    "description": "",
    "type": "select",
    "value": "taxable",
    "default": "taxable",
    "tip": "",
    "placeholder": "",
    "options": {
      "taxable": "Taxable",
      "none": "None"
    }
  },
  "cost": {
    "id": "cost",
    "label": "Cost",
    "description": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
    "type": "text",
    "value": "3",
    "default": "",
    "tip": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
    "placeholder": ""
  }
}
*/

  NewShipmentModelMethodsSettingsTitle? title;
  NewShipmentModelMethodsSettingsTaxStatus? taxStatus;
  NewShipmentModelMethodsSettingsCost? cost;

  NewShipmentModelMethodsSettings({
    this.title,
    this.taxStatus,
    this.cost,
  });
  NewShipmentModelMethodsSettings.fromJson(Map<String, dynamic> json) {
    title = (json['title'] != null) ? NewShipmentModelMethodsSettingsTitle.fromJson(json['title']) : null;
    taxStatus = (json['tax_status'] != null) ? NewShipmentModelMethodsSettingsTaxStatus.fromJson(json['tax_status']) : null;
    cost = (json['cost'] != null) ? NewShipmentModelMethodsSettingsCost.fromJson(json['cost']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (title != null) {
      data['title'] = title!.toJson();
    }
    if (taxStatus != null) {
      data['tax_status'] = taxStatus!.toJson();
    }
    if (cost != null) {
      data['cost'] = cost!.toJson();
    }
    return data;
  }
}

class NewShipmentModelMethods {
/*
{
  "id": 1,
  "instance_id": 1,
  "title": "Flat rate 1",
  "order": 1,
  "enabled": true,
  "method_id": "flat_rate",
  "method_title": "Flat rate",
  "method_description": "<p>Lets you charge a fixed rate for shipping.</p>\n",
  "settings": {
    "title": {
      "id": "title",
      "label": "Method title",
      "description": "This controls the title which the user sees during checkout.",
      "type": "text",
      "value": "Flat rate 1",
      "default": "Flat rate",
      "tip": "This controls the title which the user sees during checkout.",
      "placeholder": ""
    },
    "tax_status": {
      "id": "tax_status",
      "label": "Tax status",
      "description": "",
      "type": "select",
      "value": "taxable",
      "default": "taxable",
      "tip": "",
      "placeholder": "",
      "options": {
        "taxable": "Taxable",
        "none": "None"
      }
    },
    "cost": {
      "id": "cost",
      "label": "Cost",
      "description": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
      "type": "text",
      "value": "3",
      "default": "",
      "tip": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
      "placeholder": ""
    }
  },
  "_links": {
    "self": [
      {
        "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods/1"
      }
    ],
    "collection": [
      {
        "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods"
      }
    ],
    "describes": [
      {
        "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones/"
      }
    ]
  }
}
*/

  int? id;
  int? instanceId;
  String? title;
  int? order;
  bool? enabled;
  String? methodId;
  String? methodTitle;
  String? methodDescription;
  NewShipmentModelMethodsSettings? settings;
  NewShipmentModelMethodsLinks? Links;

  NewShipmentModelMethods({
    this.id,
    this.instanceId,
    this.title,
    this.order,
    this.enabled,
    this.methodId,
    this.methodTitle,
    this.methodDescription,
    this.settings,
    this.Links,
  });
  NewShipmentModelMethods.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    instanceId = json['instance_id']?.toInt();
    title = json['title']?.toString();
    order = json['order']?.toInt();
    enabled = json['enabled'];
    methodId = json['method_id']?.toString();
    methodTitle = json['method_title']?.toString();
    methodDescription = json['method_description']?.toString();
    settings = (json['settings'] != null) ? NewShipmentModelMethodsSettings.fromJson(json['settings']) : null;
    Links = (json['_links'] != null) ? NewShipmentModelMethodsLinks.fromJson(json['_links']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['instance_id'] = instanceId;
    data['title'] = title;
    data['order'] = order;
    data['enabled'] = enabled;
    data['method_id'] = methodId;
    data['method_title'] = methodTitle;
    data['method_description'] = methodDescription;
    if (settings != null) {
      data['settings'] = settings!.toJson();
    }
    if (Links != null) {
      data['_links'] = Links!.toJson();
    }
    return data;
  }
}

class NewShipmentModel {
/*
{
  "success": true,
  "methods": [
    {
      "id": 1,
      "instance_id": 1,
      "title": "Flat rate 1",
      "order": 1,
      "enabled": true,
      "method_id": "flat_rate",
      "method_title": "Flat rate",
      "method_description": "<p>Lets you charge a fixed rate for shipping.</p>\n",
      "settings": {
        "title": {
          "id": "title",
          "label": "Method title",
          "description": "This controls the title which the user sees during checkout.",
          "type": "text",
          "value": "Flat rate 1",
          "default": "Flat rate",
          "tip": "This controls the title which the user sees during checkout.",
          "placeholder": ""
        },
        "tax_status": {
          "id": "tax_status",
          "label": "Tax status",
          "description": "",
          "type": "select",
          "value": "taxable",
          "default": "taxable",
          "tip": "",
          "placeholder": "",
          "options": {
            "taxable": "Taxable",
            "none": "None"
          }
        },
        "cost": {
          "id": "cost",
          "label": "Cost",
          "description": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
          "type": "text",
          "value": "3",
          "default": "",
          "tip": "Enter a cost (excl. tax) or sum, e.g. <code>10.00 * [qty]</code>.<br/><br/>Use <code>[qty]</code> for the number of items, <br/><code>[cost]</code> for the total cost of items, and <code>[fee percent=\"10\" min_fee=\"20\" max_fee=\"\"]</code> for percentage based fees.",
          "placeholder": ""
        }
      },
      "_links": {
        "self": [
          {
            "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods/1"
          }
        ],
        "collection": [
          {
            "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones//methods"
          }
        ],
        "describes": [
          {
            "href": "${Url.BASE_URL}wp-json/wc/v3/shipping/zones/"
          }
        ]
      }
    }
  ]
}
*/

  bool? success;
  List<NewShipmentModelMethods?>? methods;
  String? currency;

  NewShipmentModel({
    this.success,
    this.methods,
    this.currency
  });
  NewShipmentModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    if (json['methods'] != null) {
      final v = json['methods'];
      final arr0 = <NewShipmentModelMethods>[];
      v.forEach((v) {
        arr0.add(NewShipmentModelMethods.fromJson(v));
      });
      methods = arr0;
    }
    currency=json['currency'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    if (methods != null) {
      final v = methods;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['methods'] = arr0;
    }
    data['currency']=currency;
    return data;
  }
}
