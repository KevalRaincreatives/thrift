///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
///
///
///

class CartModelCartVariations {
/*
{
  "attribute_name": "size",
  "attribute_value": "S"
}
*/

  String? attributeName;
  String? attributeValue;

  CartModelCartVariations({
    this.attributeName,
    this.attributeValue,
  });
  CartModelCartVariations.fromJson(Map<String, dynamic> json) {
    attributeName = json['attribute_name']?.toString();
    attributeValue = json['attribute_value']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['attribute_name'] = attributeName;
    data['attribute_value'] = attributeValue;
    return data;
  }
}


class CartModelCart {
/*
{
  "key": "9f5c2f346de52c77f162838fdda18c06",
  "product_id": "96071",
  "variation_id": "",
  "variation": [
    null
  ],
  "quantity": 1,
  "line_subtotal": 21.92982,
  "line_total": 21.92982,
  "product_name": "Kit Recharge Toner HP 205A / CF532A Jaune",
  "product_type": "simple",
  "product_price": "21.92982",
  "product_image": "https://encros.rcstaging.co.in/wp-content/uploads/2021/06/kit_toner_jaune_2.jpg"
}
*/

  String? key;
  dynamic? productId;
  dynamic? variationId;
  Variation? variation;
  dynamic? quantity;
  dynamic? lineSubtotal;
  dynamic? lineTotal;
  String? productName;
  String? productType;
  String? productPrice;
  List<CartModelCartVariations?>? variations;
  String? productImage;

  CartModelCart({
    this.key,
    this.productId,
    this.variationId,
    this.variation,
    this.quantity,
    this.lineSubtotal,
    this.lineTotal,
    this.productName,
    this.productType,
    this.productPrice,
    this.variations,
    this.productImage,
  });
  CartModelCart.fromJson(Map<String, dynamic> json) {
    key = json["key"]?.toString();
    productId = json["product_id"]?.toString();
    variationId = json["variation_id"]?.toString();
    if(variationId.runtimeType==int){
      variation = null;
    }else if(variationId.runtimeType==String){
      if(variationId!=''){
        variation = json['variation'] != null
            ? new Variation.fromJson(json['variation'])
            : null;
      }else{
        variation = null;
      }
    }

    quantity = json["quantity"];
    lineSubtotal = json["line_subtotal"]?.toString();
    lineTotal = json["line_total"]?.toString();
    productName = json["product_name"]?.toString();
    productType = json["product_type"]?.toString();
    productPrice = json["product_price"]?.toString();
    if (json['variations'] != null) {
      final v = json['variations'];
      final arr0 = <CartModelCartVariations>[];
      v.forEach((v) {
        arr0.add(CartModelCartVariations.fromJson(v));
      });
      variations = arr0;
    }

    productImage = json["product_image"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["key"] = key;
    data["product_id"] = productId;
    data["variation_id"] = variationId;
    if (this.variation != null) {
      data['variation'] = this.variation!.toJson();
    }
    data["quantity"] = quantity;
    data["line_subtotal"] = lineSubtotal;
    data["line_total"] = lineTotal;
    data["product_name"] = productName;
    data["product_type"] = productType;
    data["product_price"] = productPrice;
    if (variations != null) {
      final v = variations;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['variations'] = arr0;
    }
    data["product_image"] = productImage;
    return data;
  }
}

class CartModel {
/*
{
  "cart": [
    {
      "key": "9f5c2f346de52c77f162838fdda18c06",
      "product_id": "96071",
      "variation_id": "",
      "variation": [
        null
      ],
      "quantity": 1,
      "line_subtotal": 21.92982,
      "line_total": 21.92982,
      "product_name": "Kit Recharge Toner HP 205A / CF532A Jaune",
      "product_type": "simple",
      "product_price": "21.92982",
      "product_image": "https://encros.rcstaging.co.in/wp-content/uploads/2021/06/kit_toner_jaune_2.jpg"
    }
  ],
  "total": 65.78945999999999,
  "sub_total": 65.78945999999999,
  "applied_coupons": null,
  "coupon_discount_totals": null,
  "status": true
}
*/

  List<CartModelCart?>? cart;
  dynamic? total;
  dynamic? subTotal;
  List<String>? appliedCoupons;
  List<CouponDiscountTotals?>? couponDiscountTotals;
  bool? status;
  String? currency;

  CartModel({
    this.cart,
    this.total,
    this.subTotal,
    this.appliedCoupons,
    this.couponDiscountTotals,
    this.status,
    this.currency
  });
  CartModel.fromJson(Map<String, dynamic> json) {
    if (json["cart"] != null) {
      final v = json["cart"];
      final arr0 = <CartModelCart>[];
      v.forEach((v) {
        arr0.add(CartModelCart.fromJson(v));
      });
      cart = arr0;
    }
    total = json["total"]?.toString();
    subTotal = json["sub_total"]?.toString();
    if (json['applied_coupons'] != null && json['applied_coupons'] != '') {
      appliedCoupons = json['applied_coupons'].cast<String>();
    }else{
      appliedCoupons = [''];
    }
    if (json['coupon_discount_totals'] != null && json['coupon_discount_totals'] != '') {
      // couponDiscountTotals = <CouponDiscountTotals>[];
      // json['coupon_discount_totals'].forEach((v) { couponDiscountTotals!.add(new CouponDiscountTotals.fromJson(v)); });
      final v = json['coupon_discount_totals'];
      final arr0 = <CouponDiscountTotals>[];
      v.forEach((v) {
        arr0.add(CouponDiscountTotals.fromJson(v));
      });
      couponDiscountTotals = arr0;
    }else{
      couponDiscountTotals = [];
    }
    status = json["status"];
    currency= json["currency"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (cart != null) {
      final v = cart;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data["cart"] = arr0;
    }
    data["total"] = total;
    data["sub_total"] = subTotal;
    if (this.appliedCoupons != null) {
      data['applied_coupons'] = this.appliedCoupons;
    }
    if (this.couponDiscountTotals != null) {
      data['coupon_discount_totals'] = this.couponDiscountTotals!.map((v) => v!.toJson()).toList();
    }
    data["status"] = status;
    data["currency"]=currency;
    return data;
  }
}
class Variation {
  String? attributeColor;

  Variation({this.attributeColor});

  Variation.fromJson(Map<String, dynamic> json) {
    attributeColor = json['attribute_pa_color'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['attribute_pa_color'] = this.attributeColor;
    return data;
  }
}
class CouponDiscountTotals {
  String? coupon_title;
  dynamic? coupon_price;

  CouponDiscountTotals({this.coupon_title,this.coupon_price});

  CouponDiscountTotals.fromJson(Map<String, dynamic> json) {
    coupon_title = json['coupon_title'];
    coupon_price= json['coupon_price'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['coupon_title'] = this.coupon_title;
    data['coupon_price'] = this.coupon_price;
    return data;
  }
}