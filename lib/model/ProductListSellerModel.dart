///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///

class ProfileSelModel {
/*
{
  "success": true,
  "shipping_charge": 0,
  "total": 1278
}
*/

  String? profile_picture;

  ProfileSelModel({
    this.profile_picture,
  });
  ProfileSelModel.fromJson(Map<String, dynamic> json) {
    profile_picture = json["profile_picture"];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["profile_picture"] = profile_picture;
    return data;
  }
}


class ProductListSellerModelProductsDataStoreStoreTabHeadings {
/*
{
  "products": "Products",
  "about": "About",
  "policies": "Policies",
  "reviews": "Reviews (<span class=\"wcfm_reviews_count\">0</span>)"
}
*/

  String? products;
  String? about;
  String? policies;
  String? reviews;

  ProductListSellerModelProductsDataStoreStoreTabHeadings({
    this.products,
    this.about,
    this.policies,
    this.reviews,
  });
  ProductListSellerModelProductsDataStoreStoreTabHeadings.fromJson(Map<String, dynamic> json) {
    products = json['products']?.toString();
    about = json['about']?.toString();
    policies = json['policies']?.toString();
    reviews = json['reviews']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['products'] = products;
    data['about'] = about;
    data['policies'] = policies;
    data['reviews'] = reviews;
    return data;
  }
}

class ProductListSellerModelProductsDataStoreVendorPolicies {
/*
{
  "shipping_policy_heading": "Shipping Policy",
  "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
  "refund_policy_heading": "Refund Policy",
  "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
  "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
  "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>"
}
*/

  String? shippingPolicyHeading;
  String? shippingPolicy;
  String? refundPolicyHeading;
  String? refundPolicy;
  String? cancellationPolicyHeading;
  String? cancellationPolicy;

  ProductListSellerModelProductsDataStoreVendorPolicies({
    this.shippingPolicyHeading,
    this.shippingPolicy,
    this.refundPolicyHeading,
    this.refundPolicy,
    this.cancellationPolicyHeading,
    this.cancellationPolicy,
  });
  ProductListSellerModelProductsDataStoreVendorPolicies.fromJson(Map<String, dynamic> json) {
    shippingPolicyHeading = json['shipping_policy_heading']?.toString();
    shippingPolicy = json['shipping_policy']?.toString();
    refundPolicyHeading = json['refund_policy_heading']?.toString();
    refundPolicy = json['refund_policy']?.toString();
    cancellationPolicyHeading = json['cancellation_policy_heading']?.toString();
    cancellationPolicy = json['cancellation_policy']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['shipping_policy_heading'] = shippingPolicyHeading;
    data['shipping_policy'] = shippingPolicy;
    data['refund_policy_heading'] = refundPolicyHeading;
    data['refund_policy'] = refundPolicy;
    data['cancellation_policy_heading'] = cancellationPolicyHeading;
    data['cancellation_policy'] = cancellationPolicy;
    return data;
  }
}

class ProductListSellerModelProductsDataStoreVendorAdditionalInfo {
/*
{
  "type": "text",
  "label": "",
  "options": "",
  "content": "",
  "help_text": "",
  "name": "",
  "value": ""
}
*/

  String? type;
  String? label;
  String? options;
  String? content;
  String? helpText;
  String? name;
  String? value;

  ProductListSellerModelProductsDataStoreVendorAdditionalInfo({
    this.type,
    this.label,
    this.options,
    this.content,
    this.helpText,
    this.name,
    this.value,
  });
  ProductListSellerModelProductsDataStoreVendorAdditionalInfo.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    label = json['label']?.toString();
    options = json['options']?.toString();
    content = json['content']?.toString();
    helpText = json['help_text']?.toString();
    name = json['name']?.toString();
    value = json['value']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['label'] = label;
    data['options'] = options;
    data['content'] = content;
    data['help_text'] = helpText;
    data['name'] = name;
    data['value'] = value;
    return data;
  }
}

class ProductListSellerModelProductsDataStore {
/*
{
  "vendor_id": 6,
  "vendor_display_name": "vendor01",
  "vendor_shop_name": "vendor01",
  "formatted_display_name": "vendor01 - vendor01 (#6 - vendor01)",
  "store_hide_email": "no",
  "store_hide_phone": "no",
  "store_hide_address": "no",
  "store_hide_description": "no",
  "store_hide_policy": "no",
  "store_products_per_page": 10,
  "vendor_email": "rain.creatives@gmail.com",
  "disable_vendor": "no",
  "is_store_offline": "no",
  "vendor_shop_logo": "${Url.BASE_URL}wp-content/plugins/wc-frontend-manager/assets/images/wcfmmp-blue.png",
  "vendor_banner_type": "image",
  "vendor_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
  "mobile_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
  "vendor_list_banner_type": "image",
  "vendor_list_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
  "store_rating": "",
  "email_verified": "1",
  "vendor_additional_info": [
    {
      "type": "text",
      "label": "",
      "options": "",
      "content": "",
      "help_text": "",
      "name": "",
      "value": ""
    }
  ],
  "vendor_description": "<p><br data-mce-bogus=\"1\"></p>\n",
  "vendor_policies": {
    "shipping_policy_heading": "Shipping Policy",
    "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
    "refund_policy_heading": "Refund Policy",
    "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
    "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
    "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>"
  },
  "store_tab_headings": {
    "products": "Products",
    "about": "About",
    "policies": "Policies",
    "reviews": "Reviews (<span class=\"wcfm_reviews_count\">0</span>)"
  }
}
*/

  int? vendorId;
  String? vendorDisplayName;
  String? vendorShopName;
  String? formattedDisplayName;
  String? storeHideEmail;
  String? storeHidePhone;
  String? storeHideAddress;
  String? storeHideDescription;
  String? storeHidePolicy;
  int? storeProductsPerPage;
  String? vendorEmail;
  String? disableVendor;
  String? isStoreOffline;
  String? vendorShopLogo;
  String? vendorBannerType;
  String? vendorBanner;
  String? mobileBanner;
  String? vendorListBannerType;
  String? vendorListBanner;
  String? storeRating;
  String? emailVerified;
  List<ProductListSellerModelProductsDataStoreVendorAdditionalInfo?>? vendorAdditionalInfo;
  String? vendorDescription;
  ProductListSellerModelProductsDataStoreVendorPolicies? vendorPolicies;
  ProductListSellerModelProductsDataStoreStoreTabHeadings? storeTabHeadings;

  ProductListSellerModelProductsDataStore({
    this.vendorId,
    this.vendorDisplayName,
    this.vendorShopName,
    this.formattedDisplayName,
    this.storeHideEmail,
    this.storeHidePhone,
    this.storeHideAddress,
    this.storeHideDescription,
    this.storeHidePolicy,
    this.storeProductsPerPage,
    this.vendorEmail,
    this.disableVendor,
    this.isStoreOffline,
    this.vendorShopLogo,
    this.vendorBannerType,
    this.vendorBanner,
    this.mobileBanner,
    this.vendorListBannerType,
    this.vendorListBanner,
    this.storeRating,
    this.emailVerified,
    this.vendorAdditionalInfo,
    this.vendorDescription,
    this.vendorPolicies,
    this.storeTabHeadings,
  });
  ProductListSellerModelProductsDataStore.fromJson(Map<String, dynamic> json) {
    vendorId = json['vendor_id']?.toInt();
    vendorDisplayName = json['vendor_display_name']?.toString();
    vendorShopName = json['vendor_shop_name']?.toString();
    formattedDisplayName = json['formatted_display_name']?.toString();
    storeHideEmail = json['store_hide_email']?.toString();
    storeHidePhone = json['store_hide_phone']?.toString();
    storeHideAddress = json['store_hide_address']?.toString();
    storeHideDescription = json['store_hide_description']?.toString();
    storeHidePolicy = json['store_hide_policy']?.toString();
    storeProductsPerPage = json['store_products_per_page']?.toInt();
    vendorEmail = json['vendor_email']?.toString();
    disableVendor = json['disable_vendor']?.toString();
    isStoreOffline = json['is_store_offline']?.toString();
    vendorShopLogo = json['vendor_shop_logo']?.toString();
    vendorBannerType = json['vendor_banner_type']?.toString();
    vendorBanner = json['vendor_banner']?.toString();
    mobileBanner = json['mobile_banner']?.toString();
    vendorListBannerType = json['vendor_list_banner_type']?.toString();
    vendorListBanner = json['vendor_list_banner']?.toString();
    storeRating = json['store_rating']?.toString();
    emailVerified = json['email_verified']?.toString();
    if (json['vendor_additional_info'] != null) {
      final v = json['vendor_additional_info'];
      final arr0 = <ProductListSellerModelProductsDataStoreVendorAdditionalInfo>[];
      v.forEach((v) {
        arr0.add(ProductListSellerModelProductsDataStoreVendorAdditionalInfo.fromJson(v));
      });
      vendorAdditionalInfo = arr0;
    }
    vendorDescription = json['vendor_description']?.toString();
    vendorPolicies = (json['vendor_policies'] != null) ? ProductListSellerModelProductsDataStoreVendorPolicies.fromJson(json['vendor_policies']) : null;
    storeTabHeadings = (json['store_tab_headings'] != null) ? ProductListSellerModelProductsDataStoreStoreTabHeadings.fromJson(json['store_tab_headings']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['vendor_id'] = vendorId;
    data['vendor_display_name'] = vendorDisplayName;
    data['vendor_shop_name'] = vendorShopName;
    data['formatted_display_name'] = formattedDisplayName;
    data['store_hide_email'] = storeHideEmail;
    data['store_hide_phone'] = storeHidePhone;
    data['store_hide_address'] = storeHideAddress;
    data['store_hide_description'] = storeHideDescription;
    data['store_hide_policy'] = storeHidePolicy;
    data['store_products_per_page'] = storeProductsPerPage;
    data['vendor_email'] = vendorEmail;
    data['disable_vendor'] = disableVendor;
    data['is_store_offline'] = isStoreOffline;
    data['vendor_shop_logo'] = vendorShopLogo;
    data['vendor_banner_type'] = vendorBannerType;
    data['vendor_banner'] = vendorBanner;
    data['mobile_banner'] = mobileBanner;
    data['vendor_list_banner_type'] = vendorListBannerType;
    data['vendor_list_banner'] = vendorListBanner;
    data['store_rating'] = storeRating;
    data['email_verified'] = emailVerified;
    if (vendorAdditionalInfo != null) {
      final v = vendorAdditionalInfo;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['vendor_additional_info'] = arr0;
    }
    data['vendor_description'] = vendorDescription;
    if (vendorPolicies != null) {
      data['vendor_policies'] = vendorPolicies!.toJson();
    }
    if (storeTabHeadings != null) {
      data['store_tab_headings'] = storeTabHeadings!.toJson();
    }
    return data;
  }
}

class ProductListSellerModelProductsDataWcfmProductPolicyData {
/*
{
  "visible": true,
  "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
  "shipping_policy_heading": "Shipping Policy",
  "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
  "refund_policy_heading": "Refund Policy",
  "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
  "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
  "tab_title": "Store Policies"
}
*/

  bool? visible;
  String? shippingPolicy;
  String? shippingPolicyHeading;
  String? refundPolicy;
  String? refundPolicyHeading;
  String? cancellationPolicy;
  String? cancellationPolicyHeading;
  String? tabTitle;

  ProductListSellerModelProductsDataWcfmProductPolicyData({
    this.visible,
    this.shippingPolicy,
    this.shippingPolicyHeading,
    this.refundPolicy,
    this.refundPolicyHeading,
    this.cancellationPolicy,
    this.cancellationPolicyHeading,
    this.tabTitle,
  });
  ProductListSellerModelProductsDataWcfmProductPolicyData.fromJson(Map<String, dynamic> json) {
    visible = json['visible'];
    shippingPolicy = json['shipping_policy']?.toString();
    shippingPolicyHeading = json['shipping_policy_heading']?.toString();
    refundPolicy = json['refund_policy']?.toString();
    refundPolicyHeading = json['refund_policy_heading']?.toString();
    cancellationPolicy = json['cancellation_policy']?.toString();
    cancellationPolicyHeading = json['cancellation_policy_heading']?.toString();
    tabTitle = json['tab_title']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['visible'] = visible;
    data['shipping_policy'] = shippingPolicy;
    data['shipping_policy_heading'] = shippingPolicyHeading;
    data['refund_policy'] = refundPolicy;
    data['refund_policy_heading'] = refundPolicyHeading;
    data['cancellation_policy'] = cancellationPolicy;
    data['cancellation_policy_heading'] = cancellationPolicyHeading;
    data['tab_title'] = tabTitle;
    return data;
  }
}

class ProductListModelCategories {
/*
{
  "id": 249,
  "name": "Acer AcerLaser 406.",
  "slug": "acer-acerlaser-406"
}
*/

  int? id;
  String? name;
  String? slug;

  ProductListModelCategories({
    this.id,
    this.name,
    this.slug,
  });
  ProductListModelCategories.fromJson(Map<String, dynamic> json) {
    id = json["id"]?.toInt();
    name = json["name"]?.toString();
    slug = json["slug"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["id"] = id;
    data["name"] = name;
    data["slug"] = slug;
    return data;
  }
}

class ProductListSellerModelProductsDataProductUnits {
/*
{
  "weight_unit": "kg",
  "dimension_unit": "cm"
}
*/

  String? weightUnit;
  String? dimensionUnit;

  ProductListSellerModelProductsDataProductUnits({
    this.weightUnit,
    this.dimensionUnit,
  });
  ProductListSellerModelProductsDataProductUnits.fromJson(Map<String, dynamic> json) {
    weightUnit = json['weight_unit']?.toString();
    dimensionUnit = json['dimension_unit']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['weight_unit'] = weightUnit;
    data['dimension_unit'] = dimensionUnit;
    return data;
  }
}

class ProductListSellerModelProductsDataMetaData {
/*
{
  "id": 54845,
  "key": "_wcfm_product_author",
  "value": "1"
}
*/

  int? id;
  String? key;
  String? value;

  ProductListSellerModelProductsDataMetaData({
    this.id,
    this.key,
    this.value,
  });
  ProductListSellerModelProductsDataMetaData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    key = json['key']?.toString();
    value = json['value']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['key'] = key;
    data['value'] = value;
    return data;
  }
}

class ProductListSellerModelProductsDataAttributes {
/*
{
  "id": 1,
  "name": "Color",
  "position": 0,
  "visible": true,
  "variation": false,
  "options": [
    "White"
  ]
}
*/

  int? id;
  String? name;
  int? position;
  bool? visible;
  bool? variation;
  List<String?>? options;

  ProductListSellerModelProductsDataAttributes({
    this.id,
    this.name,
    this.position,
    this.visible,
    this.variation,
    this.options,
  });
  ProductListSellerModelProductsDataAttributes.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    position = json['position']?.toInt();
    visible = json['visible'];
    variation = json['variation'];
    if (json['options'] != null) {
      final v = json['options'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      options = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['position'] = position;
    data['visible'] = visible;
    data['variation'] = variation;
    if (options != null) {
      final v = options;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['options'] = arr0;
    }
    return data;
  }
}

class ProductListModelImages {
/*
{
  "id": 2839,
  "date_created": "2022-02-09T12:58:43",
  "date_created_gmt": "2022-02-09T12:58:43",
  "date_modified": "2022-02-09T12:59:06",
  "date_modified_gmt": "2022-02-09T12:59:06",
  "src": "${Url.BASE_URL}wp-content/uploads/2022/02/white_shoe.jpg",
  "name": "white_shoe",
  "alt": ""
}
*/

  int? id;
  String? dateCreated;
  String? dateCreatedGmt;
  String? dateModified;
  String? dateModifiedGmt;
  String? src;
  String? name;
  String? alt;

  ProductListModelImages({
    this.id,
    this.dateCreated,
    this.dateCreatedGmt,
    this.dateModified,
    this.dateModifiedGmt,
    this.src,
    this.name,
    this.alt,
  });
  ProductListModelImages.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    dateCreated = json['date_created']?.toString();
    dateCreatedGmt = json['date_created_gmt']?.toString();
    dateModified = json['date_modified']?.toString();
    dateModifiedGmt = json['date_modified_gmt']?.toString();
    src = json['src']?.toString();
    name = json['name']?.toString();
    alt = json['alt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['date_created'] = dateCreated;
    data['date_created_gmt'] = dateCreatedGmt;
    data['date_modified'] = dateModified;
    data['date_modified_gmt'] = dateModifiedGmt;
    data['src'] = src;
    data['name'] = name;
    data['alt'] = alt;
    return data;
  }
}

class ProductListSellerModelProductsDataDimensions {
/*
{
  "length": "",
  "width": "",
  "height": ""
}
*/

  String? length;
  String? width;
  String? height;

  ProductListSellerModelProductsDataDimensions({
    this.length,
    this.width,
    this.height,
  });
  ProductListSellerModelProductsDataDimensions.fromJson(Map<String, dynamic> json) {
    length = json['length']?.toString();
    width = json['width']?.toString();
    height = json['height']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['length'] = length;
    data['width'] = width;
    data['height'] = height;
    return data;
  }
}

class ProductListSellerModelProductsData {
/*
{
  "id": 2838,
  "name": "White shoes",
  "slug": "white-shoes-2",
  "permalink": "${Url.BASE_URL}product/white-shoes-2/",
  "date_created": "2022-02-09T12:57:44",
  "date_created_gmt": "2022-02-09T12:57:44",
  "date_modified": "2022-02-09T14:13:42",
  "date_modified_gmt": "2022-02-09T14:13:42",
  "type": "simple",
  "status": "publish",
  "featured": false,
  "catalog_visibility": "visible",
  "description": "<p>White Shoes Short Desc</p>\n",
  "short_description": "<p>White Shoes</p>\n",
  "sku": "Sh001",
  "price": "100",
  "regular_price": "100",
  "sale_price": "",
  "date_on_sale_from": null,
  "date_on_sale_from_gmt": null,
  "date_on_sale_to": null,
  "date_on_sale_to_gmt": null,
  "on_sale": false,
  "purchasable": true,
  "total_sales": 2,
  "virtual": false,
  "downloadable": false,
  "downloads": [
    null
  ],
  "download_limit": -1,
  "download_expiry": -1,
  "external_url": "",
  "button_text": "",
  "tax_status": "taxable",
  "tax_class": "",
  "manage_stock": true,
  "stock_quantity": -1,
  "backorders": "no",
  "backorders_allowed": false,
  "backordered": false,
  "low_stock_amount": null,
  "sold_individually": false,
  "weight": "",
  "dimensions": {
    "length": "",
    "width": "",
    "height": ""
  },
  "shipping_required": true,
  "shipping_taxable": true,
  "shipping_class": "",
  "shipping_class_id": 0,
  "reviews_allowed": true,
  "average_rating": "0.00",
  "rating_count": 0,
  "upsell_ids": [
    null
  ],
  "cross_sell_ids": [
    null
  ],
  "parent_id": 0,
  "purchase_note": "",
  "categories": [
    null
  ],
  "tags": [
    null
  ],
  "images": [
    {
      "id": 2839,
      "date_created": "2022-02-09T12:58:43",
      "date_created_gmt": "2022-02-09T12:58:43",
      "date_modified": "2022-02-09T12:59:06",
      "date_modified_gmt": "2022-02-09T12:59:06",
      "src": "${Url.BASE_URL}wp-content/uploads/2022/02/white_shoe.jpg",
      "name": "white_shoe",
      "alt": ""
    }
  ],
  "attributes": [
    {
      "id": 1,
      "name": "Color",
      "position": 0,
      "visible": true,
      "variation": false,
      "options": [
        "White"
      ]
    }
  ],
  "default_attributes": [
    null
  ],
  "variations": [
    null
  ],
  "grouped_products": [
    null
  ],
  "menu_order": 0,
  "price_html": "<span class=\"woocommerce-Price-amount amount\"><bdi><span class=\"woocommerce-Price-currencySymbol\">&#36;</span>100.00</bdi></span>",
  "related_ids": [
    null
  ],
  "meta_data": [
    {
      "id": 54845,
      "key": "_wcfm_product_author",
      "value": "1"
    }
  ],
  "stock_status": "outofstock",
  "display_product": true,
  "product_units": {
    "weight_unit": "kg",
    "dimension_unit": "cm"
  },
  "wcfm_product_policy_data": {
    "visible": true,
    "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
    "shipping_policy_heading": "Shipping Policy",
    "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
    "refund_policy_heading": "Refund Policy",
    "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
    "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
    "tab_title": "Store Policies"
  },
  "showAdditionalInfoTab": true,
  "store": {
    "vendor_id": 6,
    "vendor_display_name": "vendor01",
    "vendor_shop_name": "vendor01",
    "formatted_display_name": "vendor01 - vendor01 (#6 - vendor01)",
    "store_hide_email": "no",
    "store_hide_phone": "no",
    "store_hide_address": "no",
    "store_hide_description": "no",
    "store_hide_policy": "no",
    "store_products_per_page": 10,
    "vendor_email": "rain.creatives@gmail.com",
    "disable_vendor": "no",
    "is_store_offline": "no",
    "vendor_shop_logo": "${Url.BASE_URL}wp-content/plugins/wc-frontend-manager/assets/images/wcfmmp-blue.png",
    "vendor_banner_type": "image",
    "vendor_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
    "mobile_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
    "vendor_list_banner_type": "image",
    "vendor_list_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
    "store_rating": "",
    "email_verified": "1",
    "vendor_additional_info": [
      {
        "type": "text",
        "label": "",
        "options": "",
        "content": "",
        "help_text": "",
        "name": "",
        "value": ""
      }
    ],
    "vendor_description": "<p><br data-mce-bogus=\"1\"></p>\n",
    "vendor_policies": {
      "shipping_policy_heading": "Shipping Policy",
      "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
      "refund_policy_heading": "Refund Policy",
      "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
      "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
      "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>"
    },
    "store_tab_headings": {
      "products": "Products",
      "about": "About",
      "policies": "Policies",
      "reviews": "Reviews (<span class=\"wcfm_reviews_count\">0</span>)"
    }
  }
}
*/

  int? id;
  String? name;
  String? slug;
  String? permalink;
  String? dateCreated;
  String? dateCreatedGmt;
  String? dateModified;
  String? dateModifiedGmt;
  String? type;
  String? status;
  bool? featured;
  String? catalogVisibility;
  String? description;
  String? shortDescription;
  String? sku;
  String? price;
  String? regularPrice;
  String? salePrice;
  String? dateOnSaleFrom;
  String? dateOnSaleFromGmt;
  String? dateOnSaleTo;
  String? dateOnSaleToGmt;
  bool? onSale;
  bool? purchasable;
  int? totalSales;
  bool? virtual;
  bool? downloadable;
  int? downloadLimit;
  int? downloadExpiry;
  String? externalUrl;
  String? buttonText;
  String? taxStatus;
  String? taxClass;
  bool? manageStock;
  String? stockQuantity;
  String? backorders;
  bool? backordersAllowed;
  bool? backordered;
  String? lowStockAmount;
  bool? soldIndividually;
  String? weight;
  ProductListSellerModelProductsDataDimensions? dimensions;
  bool? shippingRequired;
  bool? shippingTaxable;
  String? shippingClass;
  int? shippingClassId;
  bool? reviewsAllowed;
  String? averageRating;
  int? ratingCount;
  int? parentId;
  String? purchaseNote;
  List<ProductListModelCategories?>? categories;
  List<ProductListModelImages?>? images;
  int? menuOrder;
  String? priceHtml;
  List<int?>? relatedIds;
  List<ProductListSellerModelProductsDataMetaData?>? metaData;
  String? stockStatus;
  ProductListSellerModelProductsDataStore? store;

  ProductListSellerModelProductsData({
    this.id,
    this.name,
    this.slug,
    this.permalink,
    this.dateCreated,
    this.dateCreatedGmt,
    this.dateModified,
    this.dateModifiedGmt,
    this.type,
    this.status,
    this.featured,
    this.catalogVisibility,
    this.description,
    this.shortDescription,
    this.sku,
    this.price,
    this.regularPrice,
    this.salePrice,
    this.dateOnSaleFrom,
    this.dateOnSaleFromGmt,
    this.dateOnSaleTo,
    this.dateOnSaleToGmt,
    this.onSale,
    this.purchasable,
    this.totalSales,
    this.virtual,
    this.downloadable,
    this.downloadLimit,
    this.downloadExpiry,
    this.externalUrl,
    this.buttonText,
    this.taxStatus,
    this.taxClass,
    this.manageStock,
    this.stockQuantity,
    this.backorders,
    this.backordersAllowed,
    this.backordered,
    this.lowStockAmount,
    this.soldIndividually,
    this.weight,
    this.dimensions,
    this.shippingRequired,
    this.shippingTaxable,
    this.shippingClass,
    this.shippingClassId,
    this.reviewsAllowed,
    this.averageRating,
    this.ratingCount,
    this.parentId,
    this.purchaseNote,
    this.categories,
    this.images,
    this.menuOrder,
    this.priceHtml,
    this.relatedIds,
    this.metaData,
    this.stockStatus,
    this.store,
  });
  ProductListSellerModelProductsData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    slug = json['slug']?.toString();
    permalink = json['permalink']?.toString();
    dateCreated = json['date_created']?.toString();
    dateCreatedGmt = json['date_created_gmt']?.toString();
    dateModified = json['date_modified']?.toString();
    dateModifiedGmt = json['date_modified_gmt']?.toString();
    type = json['type']?.toString();
    status = json['status']?.toString();
    featured = json['featured'];
    catalogVisibility = json['catalog_visibility']?.toString();
    description = json['description']?.toString();
    shortDescription = json['short_description']?.toString();
    sku = json['sku']?.toString();
    price = json['price']?.toString();
    regularPrice = json['regular_price']?.toString();
    salePrice = json['sale_price']?.toString();
    dateOnSaleFrom = json['date_on_sale_from']?.toString();
    dateOnSaleFromGmt = json['date_on_sale_from_gmt']?.toString();
    dateOnSaleTo = json['date_on_sale_to']?.toString();
    dateOnSaleToGmt = json['date_on_sale_to_gmt']?.toString();
    onSale = json['on_sale'];
    purchasable = json['purchasable'];
    totalSales = json['total_sales']?.toInt();
    virtual = json['virtual'];
    downloadable = json['downloadable'];
    downloadExpiry = json['download_expiry']?.toInt();
    externalUrl = json['external_url']?.toString();
    buttonText = json['button_text']?.toString();
    taxStatus = json['tax_status']?.toString();
    taxClass = json['tax_class']?.toString();
    manageStock = json['manage_stock'];
    stockQuantity = json['stock_quantity']?.toString();
    backorders = json['backorders']?.toString();
    backordersAllowed = json['backorders_allowed'];
    backordered = json['backordered'];
    lowStockAmount = json['low_stock_amount']?.toString();
    soldIndividually = json['sold_individually'];
    weight = json['weight']?.toString();
    dimensions = (json['dimensions'] != null) ? ProductListSellerModelProductsDataDimensions.fromJson(json['dimensions']) : null;
    shippingRequired = json['shipping_required'];
    shippingTaxable = json['shipping_taxable'];
    shippingClass = json['shipping_class']?.toString();
    shippingClassId = json['shipping_class_id']?.toInt();
    reviewsAllowed = json['reviews_allowed'];
    averageRating = json['average_rating']?.toString();
    ratingCount = json['rating_count']?.toInt();
    parentId = json['parent_id']?.toInt();
    purchaseNote = json['purchase_note']?.toString();
    if (json['images'] != null) {
    final v = json['images'];
    final arr0 = <ProductListModelImages>[];
    v.forEach((v) {
    arr0.add(ProductListModelImages.fromJson(v));
    });
    images = arr0;
    }

    menuOrder = json['menu_order']?.toInt();
    priceHtml = json['price_html']?.toString();
    if (json['meta_data'] != null) {
    final v = json['meta_data'];
    final arr0 = <ProductListSellerModelProductsDataMetaData>[];
    v.forEach((v) {
    arr0.add(ProductListSellerModelProductsDataMetaData.fromJson(v));
    });
    metaData = arr0;
    }
    stockStatus = json['stock_status']?.toString();
    store = (json['store'] != null) ? ProductListSellerModelProductsDataStore.fromJson(json['store']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['slug'] = slug;
    data['permalink'] = permalink;
    data['date_created'] = dateCreated;
    data['date_created_gmt'] = dateCreatedGmt;
    data['date_modified'] = dateModified;
    data['date_modified_gmt'] = dateModifiedGmt;
    data['type'] = type;
    data['status'] = status;
    data['featured'] = featured;
    data['catalog_visibility'] = catalogVisibility;
    data['description'] = description;
    data['short_description'] = shortDescription;
    data['sku'] = sku;
    data['price'] = price;
    data['regular_price'] = regularPrice;
    data['sale_price'] = salePrice;
    data['date_on_sale_from'] = dateOnSaleFrom;
    data['date_on_sale_from_gmt'] = dateOnSaleFromGmt;
    data['date_on_sale_to'] = dateOnSaleTo;
    data['date_on_sale_to_gmt'] = dateOnSaleToGmt;
    data['on_sale'] = onSale;
    data['purchasable'] = purchasable;
    data['total_sales'] = totalSales;
    data['virtual'] = virtual;
    data['downloadable'] = downloadable;
    data['download_limit'] = downloadLimit;
    data['download_expiry'] = downloadExpiry;
    data['external_url'] = externalUrl;
    data['button_text'] = buttonText;
    data['tax_status'] = taxStatus;
    data['tax_class'] = taxClass;
    data['manage_stock'] = manageStock;
    data['stock_quantity'] = stockQuantity;
    data['backorders'] = backorders;
    data['backorders_allowed'] = backordersAllowed;
    data['backordered'] = backordered;
    data['low_stock_amount'] = lowStockAmount;
    data['sold_individually'] = soldIndividually;
    data['weight'] = weight;
    if (dimensions != null) {
    data['dimensions'] = dimensions!.toJson();
    }
    data['shipping_required'] = shippingRequired;
    data['shipping_taxable'] = shippingTaxable;
    data['shipping_class'] = shippingClass;
    data['shipping_class_id'] = shippingClassId;
    data['reviews_allowed'] = reviewsAllowed;
    data['average_rating'] = averageRating;
    data['rating_count'] = ratingCount;
    data['parent_id'] = parentId;
    data['purchase_note'] = purchaseNote;
    if (images != null) {
    final v = images;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['images'] = arr0;
    }
    data['menu_order'] = menuOrder;
    data['price_html'] = priceHtml;
    if (metaData != null) {
    final v = metaData;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['meta_data'] = arr0;
    }
    data['stock_status'] = stockStatus;

    return data;
  }
}

class ProductListSellerModelProducts {
/*
{
  "data": {
    "id": 2838,
    "name": "White shoes",
    "slug": "white-shoes-2",
    "permalink": "${Url.BASE_URL}product/white-shoes-2/",
    "date_created": "2022-02-09T12:57:44",
    "date_created_gmt": "2022-02-09T12:57:44",
    "date_modified": "2022-02-09T14:13:42",
    "date_modified_gmt": "2022-02-09T14:13:42",
    "type": "simple",
    "status": "publish",
    "featured": false,
    "catalog_visibility": "visible",
    "description": "<p>White Shoes Short Desc</p>\n",
    "short_description": "<p>White Shoes</p>\n",
    "sku": "Sh001",
    "price": "100",
    "regular_price": "100",
    "sale_price": "",
    "date_on_sale_from": null,
    "date_on_sale_from_gmt": null,
    "date_on_sale_to": null,
    "date_on_sale_to_gmt": null,
    "on_sale": false,
    "purchasable": true,
    "total_sales": 2,
    "virtual": false,
    "downloadable": false,
    "downloads": [
      null
    ],
    "download_limit": -1,
    "download_expiry": -1,
    "external_url": "",
    "button_text": "",
    "tax_status": "taxable",
    "tax_class": "",
    "manage_stock": true,
    "stock_quantity": -1,
    "backorders": "no",
    "backorders_allowed": false,
    "backordered": false,
    "low_stock_amount": null,
    "sold_individually": false,
    "weight": "",
    "dimensions": {
      "length": "",
      "width": "",
      "height": ""
    },
    "shipping_required": true,
    "shipping_taxable": true,
    "shipping_class": "",
    "shipping_class_id": 0,
    "reviews_allowed": true,
    "average_rating": "0.00",
    "rating_count": 0,
    "upsell_ids": [
      null
    ],
    "cross_sell_ids": [
      null
    ],
    "parent_id": 0,
    "purchase_note": "",
    "categories": [
      null
    ],
    "tags": [
      null
    ],
    "images": [
      {
        "id": 2839,
        "date_created": "2022-02-09T12:58:43",
        "date_created_gmt": "2022-02-09T12:58:43",
        "date_modified": "2022-02-09T12:59:06",
        "date_modified_gmt": "2022-02-09T12:59:06",
        "src": "${Url.BASE_URL}wp-content/uploads/2022/02/white_shoe.jpg",
        "name": "white_shoe",
        "alt": ""
      }
    ],
    "attributes": [
      {
        "id": 1,
        "name": "Color",
        "position": 0,
        "visible": true,
        "variation": false,
        "options": [
          "White"
        ]
      }
    ],
    "default_attributes": [
      null
    ],
    "variations": [
      null
    ],
    "grouped_products": [
      null
    ],
    "menu_order": 0,
    "price_html": "<span class=\"woocommerce-Price-amount amount\"><bdi><span class=\"woocommerce-Price-currencySymbol\">&#36;</span>100.00</bdi></span>",
    "related_ids": [
      null
    ],
    "meta_data": [
      {
        "id": 54845,
        "key": "_wcfm_product_author",
        "value": "1"
      }
    ],
    "stock_status": "outofstock",
    "display_product": true,
    "product_units": {
      "weight_unit": "kg",
      "dimension_unit": "cm"
    },
    "wcfm_product_policy_data": {
      "visible": true,
      "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
      "shipping_policy_heading": "Shipping Policy",
      "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
      "refund_policy_heading": "Refund Policy",
      "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
      "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
      "tab_title": "Store Policies"
    },
    "showAdditionalInfoTab": true,
    "store": {
      "vendor_id": 6,
      "vendor_display_name": "vendor01",
      "vendor_shop_name": "vendor01",
      "formatted_display_name": "vendor01 - vendor01 (#6 - vendor01)",
      "store_hide_email": "no",
      "store_hide_phone": "no",
      "store_hide_address": "no",
      "store_hide_description": "no",
      "store_hide_policy": "no",
      "store_products_per_page": 10,
      "vendor_email": "rain.creatives@gmail.com",
      "disable_vendor": "no",
      "is_store_offline": "no",
      "vendor_shop_logo": "${Url.BASE_URL}wp-content/plugins/wc-frontend-manager/assets/images/wcfmmp-blue.png",
      "vendor_banner_type": "image",
      "vendor_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
      "mobile_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
      "vendor_list_banner_type": "image",
      "vendor_list_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
      "store_rating": "",
      "email_verified": "1",
      "vendor_additional_info": [
        {
          "type": "text",
          "label": "",
          "options": "",
          "content": "",
          "help_text": "",
          "name": "",
          "value": ""
        }
      ],
      "vendor_description": "<p><br data-mce-bogus=\"1\"></p>\n",
      "vendor_policies": {
        "shipping_policy_heading": "Shipping Policy",
        "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
        "refund_policy_heading": "Refund Policy",
        "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
        "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
        "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>"
      },
      "store_tab_headings": {
        "products": "Products",
        "about": "About",
        "policies": "Policies",
        "reviews": "Reviews (<span class=\"wcfm_reviews_count\">0</span>)"
      }
    }
  },
  "headers": [
    null
  ],
  "status": 200
}
*/

  ProductListSellerModelProductsData? data;
  int? status;

  ProductListSellerModelProducts({
    this.data,
    this.status,
  });
  ProductListSellerModelProducts.fromJson(Map<String, dynamic> json) {
    data = (json['data'] != null) ? ProductListSellerModelProductsData.fromJson(json['data']) : null;
    status = json['status']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    data['status'] = status;
    return data;
  }
}

class ProductListSellerModel {
/*
{
  "success": true,
  "products": [
    {
      "data": {
        "id": 2838,
        "name": "White shoes",
        "slug": "white-shoes-2",
        "permalink": "${Url.BASE_URL}product/white-shoes-2/",
        "date_created": "2022-02-09T12:57:44",
        "date_created_gmt": "2022-02-09T12:57:44",
        "date_modified": "2022-02-09T14:13:42",
        "date_modified_gmt": "2022-02-09T14:13:42",
        "type": "simple",
        "status": "publish",
        "featured": false,
        "catalog_visibility": "visible",
        "description": "<p>White Shoes Short Desc</p>\n",
        "short_description": "<p>White Shoes</p>\n",
        "sku": "Sh001",
        "price": "100",
        "regular_price": "100",
        "sale_price": "",
        "date_on_sale_from": null,
        "date_on_sale_from_gmt": null,
        "date_on_sale_to": null,
        "date_on_sale_to_gmt": null,
        "on_sale": false,
        "purchasable": true,
        "total_sales": 2,
        "virtual": false,
        "downloadable": false,
        "downloads": [
          null
        ],
        "download_limit": -1,
        "download_expiry": -1,
        "external_url": "",
        "button_text": "",
        "tax_status": "taxable",
        "tax_class": "",
        "manage_stock": true,
        "stock_quantity": -1,
        "backorders": "no",
        "backorders_allowed": false,
        "backordered": false,
        "low_stock_amount": null,
        "sold_individually": false,
        "weight": "",
        "dimensions": {
          "length": "",
          "width": "",
          "height": ""
        },
        "shipping_required": true,
        "shipping_taxable": true,
        "shipping_class": "",
        "shipping_class_id": 0,
        "reviews_allowed": true,
        "average_rating": "0.00",
        "rating_count": 0,
        "upsell_ids": [
          null
        ],
        "cross_sell_ids": [
          null
        ],
        "parent_id": 0,
        "purchase_note": "",
        "categories": [
          null
        ],
        "tags": [
          null
        ],
        "images": [
          {
            "id": 2839,
            "date_created": "2022-02-09T12:58:43",
            "date_created_gmt": "2022-02-09T12:58:43",
            "date_modified": "2022-02-09T12:59:06",
            "date_modified_gmt": "2022-02-09T12:59:06",
            "src": "${Url.BASE_URL}wp-content/uploads/2022/02/white_shoe.jpg",
            "name": "white_shoe",
            "alt": ""
          }
        ],
        "attributes": [
          {
            "id": 1,
            "name": "Color",
            "position": 0,
            "visible": true,
            "variation": false,
            "options": [
              "White"
            ]
          }
        ],
        "default_attributes": [
          null
        ],
        "variations": [
          null
        ],
        "grouped_products": [
          null
        ],
        "menu_order": 0,
        "price_html": "<span class=\"woocommerce-Price-amount amount\"><bdi><span class=\"woocommerce-Price-currencySymbol\">&#36;</span>100.00</bdi></span>",
        "related_ids": [
          null
        ],
        "meta_data": [
          {
            "id": 54845,
            "key": "_wcfm_product_author",
            "value": "1"
          }
        ],
        "stock_status": "outofstock",
        "display_product": true,
        "product_units": {
          "weight_unit": "kg",
          "dimension_unit": "cm"
        },
        "wcfm_product_policy_data": {
          "visible": true,
          "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
          "shipping_policy_heading": "Shipping Policy",
          "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
          "refund_policy_heading": "Refund Policy",
          "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
          "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
          "tab_title": "Store Policies"
        },
        "showAdditionalInfoTab": true,
        "store": {
          "vendor_id": 6,
          "vendor_display_name": "vendor01",
          "vendor_shop_name": "vendor01",
          "formatted_display_name": "vendor01 - vendor01 (#6 - vendor01)",
          "store_hide_email": "no",
          "store_hide_phone": "no",
          "store_hide_address": "no",
          "store_hide_description": "no",
          "store_hide_policy": "no",
          "store_products_per_page": 10,
          "vendor_email": "rain.creatives@gmail.com",
          "disable_vendor": "no",
          "is_store_offline": "no",
          "vendor_shop_logo": "${Url.BASE_URL}wp-content/plugins/wc-frontend-manager/assets/images/wcfmmp-blue.png",
          "vendor_banner_type": "image",
          "vendor_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
          "mobile_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
          "vendor_list_banner_type": "image",
          "vendor_list_banner": "${Url.BASE_URL}wp-content/plugins/wc-multivendor-marketplace/assets/images/default_banner.jpg",
          "store_rating": "",
          "email_verified": "1",
          "vendor_additional_info": [
            {
              "type": "text",
              "label": "",
              "options": "",
              "content": "",
              "help_text": "",
              "name": "",
              "value": ""
            }
          ],
          "vendor_description": "<p><br data-mce-bogus=\"1\"></p>\n",
          "vendor_policies": {
            "shipping_policy_heading": "Shipping Policy",
            "shipping_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
            "refund_policy_heading": "Refund Policy",
            "refund_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>",
            "cancellation_policy_heading": "Cancellation / Return / Exchange Policy",
            "cancellation_policy": "<p><br data-mce-bogus=\\\"1\\\"></p>"
          },
          "store_tab_headings": {
            "products": "Products",
            "about": "About",
            "policies": "Policies",
            "reviews": "Reviews (<span class=\"wcfm_reviews_count\">0</span>)"
          }
        }
      },
      "headers": [
        null
      ],
      "status": 200
    }
  ]
}
*/

  bool? success;
  List<ProductListSellerModelProducts?>? products;


  ProductListSellerModel({
    this.success,
    this.products,
  });
  ProductListSellerModel.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    if (json['products'] != null) {
      final v = json['products'];
      final arr0 = <ProductListSellerModelProducts>[];
      v.forEach((v) {
        arr0.add(ProductListSellerModelProducts.fromJson(v));
      });
      products = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['success'] = success;
    if (products != null) {
      final v = products;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['products'] = arr0;
    }
    return data;
  }
}
